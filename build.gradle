plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.javafx'
version '1.0.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '19'
targetCompatibility = '19'
mainClassName = 'com.javafx.actionsgradledemo.Launcher'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.javafx.actionsgradledemo'
    mainClass = mainClassName
}

javafx {
    version = '19.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
    jpackage {
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            appVersion = version
            installerName = 'ActionsGradleDemo'
            installerOptions = ['--win-menu', '--win-shortcut',
                                '--vendor', 'DarkDeveloper',
                                "--win-menu-group", "Actions demo",
                                "--app-version", version as String,
                                "--description", "demo for publishing javafx app in github using github actions"
            ]
            imageOptions = ['--icon', 'src/main/resources/com/javafx/actionsgradledemo/icons/logo.ico']
        }

    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

jlinkZip {
    group = 'distribution'
}