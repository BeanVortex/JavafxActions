name: ci
on: [ push, pull_request ]
env:
  VERSION: 1.0.0
jobs:
#  build-windows:
#    runs-on: [ windows-latest ]
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 19.0.2
#        uses: actions/setup-java@v3
#        with:
#          java-version: 19.0.2
#          distribution: 'oracle'
#          gpg-private-key: ${{ secrets.GPG_KEY }}
#          gpg-passphrase: PASSPHRASE
#      - name: Build using script
#        run: .\builders\windows.bat
#      - name: Upload Artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: windows-build
#          path: .\build\releases

#  build-linux:
#    runs-on: [ ubuntu-latest ]
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 19.0.2
#        uses: actions/setup-java@v3
#        with:
#          java-version: 19.0.2
#          distribution: 'oracle'
#          gpg-private-key: ${{ secrets.GPG_KEY }}
#          gpg-passphrase: PASSPHRASE
#
#      - name: Install makeself
#        run: sudo apt-get install makeself
#      - name: Make script executable
#        run: chmod +x ./builders/linux.sh
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Build using script
#        run: ./builders/linux.sh
#      - name: Upload Artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: linux-build
#          path: ./build/releases

  build-mac:
    runs-on: [ macos-arm ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 19.0.2
        uses: actions/setup-java@v3
        with:
          java-version: 19.0.2
          distribution: 'oracle'
          gpg-private-key: ${{ secrets.GPG_KEY }}
          gpg-passphrase: PASSPHRASE

      - name: Make script executable
        run: chmod +x ./builders/mac.sh
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build using script
        run: ./builders/mac.sh
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: mac-build
          path: ./build/releases

  release-artifacts:
    runs-on: [ ubuntu-latest ]
#    needs: [ build-windows, build-linux, build-mac ]
    needs: [ build-mac ]
    steps:
#      - name: Download Windows Artifacts
#        uses: actions/download-artifact@v2
#        with:
#          name: windows-build
#      - name: Download Linux Artifacts
#        uses: actions/download-artifact@v2
#        with:
#          name: linux-build
      - name: Download Mac Artifacts
        uses: actions/download-artifact@v2
        with:
          name: mac-build
      - name: tree
        run: tree .
      - name: Release Artifacts
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.RELEASE_TOKEN }}
          automatic_release_tag: "v${{ env.VERSION }}"
          prerelease: false
          draft: true
          title: "v${{ env.VERSION }}"
          files: |
            ./**
